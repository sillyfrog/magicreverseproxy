server {
    listen       443    ssl;
    server_name  %(domain)s;

    ssl_certificate %(certificatepath)s;
    ssl_certificate_key %(keypath)s;
    ssl_session_cache shared:le_nginx_SSL:1m; # managed by Certbot
    ssl_session_timeout 1440m; # managed by Certbot

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # managed by Certbot
    ssl_prefer_server_ciphers on; # managed by Certbot

    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256 ECDHE-ECDSA-AES256-GCM-SHA384 ECDHE-ECDSA-AES128-SHA ECDHE-ECDSA-AES256-SHA ECDHE-ECDSA-AES128-SHA256 ECDHE-ECDSA-AES256-SHA384 ECDHE-RSA-AES128-GCM-SHA256 ECDHE-RSA-AES256-GCM-SHA384 ECDHE-RSA-AES128-SHA ECDHE-RSA-AES128-SHA256 ECDHE-RSA-AES256-SHA384 DHE-RSA-AES128-GCM-SHA256 DHE-RSA-AES256-GCM-SHA384 DHE-RSA-AES128-SHA DHE-RSA-AES256-SHA DHE-RSA-AES128-SHA256 DHE-RSA-AES256-SHA256 EDH-RSA-DES-CBC3-SHA"; # managed by Certbot

    %(serveroptions)s

    location / {

        root   /usr/share/nginx/html;
        index  index.html index.htm;

        satisfy any;
%(ipsuccess)s
        auth_request /magicauth/check;
        deny   all;
        error_page 401 = /magicauth/login;
        proxy_pass %(proxydest)s;
        # Allow web sockets to work
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        # Pass info about the connection through
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Original-Url $scheme://$http_host$request_uri;
        %(options)s
    }

    location /magicauth/ {
        proxy_pass %(authserver)s;
        proxy_cache auth_cache;
        proxy_cache_key "$http_authorization$cookie_magicproxyauth";
        proxy_cache_valid 200 1m;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-Url $scheme://$http_host$request_uri;
        proxy_set_header X-Port-Url $http_host;
        proxy_set_header X-Scheme-Url $scheme;
        proxy_set_header X-Forwarded-For $remote_addr;
    }
}
